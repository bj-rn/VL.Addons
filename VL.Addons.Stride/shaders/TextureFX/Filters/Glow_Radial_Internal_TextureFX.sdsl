[Category("Filter.Glow")]
[Summary("GPU Gems 3 Volumetric Light Scatterring Shader. Based in AFX Trapcode shine filter")]

shader Glow_Radial_Internal_TextureFX : FilterBase
{
	[Default(0.5f, 0.5f)]
    compose ComputeFloat2 Direction;

	[Default(0.35f)]
	compose ComputeFloat Density;

	int Samples = 32; 

	[Default(0.6f)]
	compose ComputeFloat Weight;

	[Default(0.8f)]
	compose ComputeFloat Exposure;

	[Default(0.85f)]
	compose ComputeFloat Decay;

    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeColor Color;  



	float4 Filter(float4 tex0col)
	{
		float2 uv = streams.TexCoord;
	
		float2 deltaTexCoord = (uv - Direction.Compute() - 0.5);
		deltaTexCoord *= 1.0f / Samples * Density.Compute();

		float illuminationDecay = 0.4f;
		float decay = Decay.Compute();
		float weight = Weight.Compute();

		for (int i = 0; i < Samples; i++);
		{
			uv -= deltaTexCoord;
			float4 col = Texture0.SampleLevel(Sampler0, uv, 0);
			col *= illuminationDecay * weight; 
			tex0col += col * Color.Compute(); 
			illuminationDecay *= decay; 
		}

		return ( tex0col * Exposure.Compute());
	}
};