[Category("Filter.Distortion")]
[Summary("")]
[Tags("uv, offset, distort")]
[DontConvertToLinearOnRead("Texture1")]

shader DistortSin_Internal_TextureFX : FilterBase
{
	[Default(0.25)]
	compose ComputeFloat Shape;

	[Default(0.5)]
	compose ComputeFloat Frequency;

	[Default(0.5, 0.5)]
	compose ComputeFloat2 Phase;

	[Default(0.5)]
	compose ComputeFloat Amount;

	[Default(0.0)]
	compose ComputeFloat MapSmooth;

	int Iterations = 1;

	float smp(float2 x, float lod = 0)
	{
		float4 c = Texture1.SampleLevel(LinearSampler, x, lod);
		return max(c.r, max(c.g, c.b)) * c.a;
	}

    float4 Filter(float4 tex0col)
    {
		float shape = Shape.Compute();
		float frequency = Frequency.Compute();
		float2 phase = Phase.Compute();
		float amount = Amount.Compute();
		float mapSmooth = MapSmooth.Compute();

		float lod = saturate(mapSmooth) * log2(max(ViewSize.x, ViewSize.y));
		float2 dx = streams.TexCoord;

		for(int i = 0; i < Iterations; i++)
		{
			float2 sz = pow(2, -shape * (i - Iterations * 0.5) + 3 + frequency);
			dx += sin(dx.yx * float2(1,-1) * sz + phase * pow(pow(2, shape),i)) * amount / sz;
		}

		float2 uv = dx ;
		return Texture0.SampleLevel(LinearSampler, uv, 0);
    }
};