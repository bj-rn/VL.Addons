// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Filter/BlurDirectional.tfx

[Category("Filter.Blur")]
[Summary("")]

shader BlurDirectionalBase : FilterBase
{
    [Default(0.5)]
    compose ComputeFloat Strength;

    [Default(0.5f, 0.5f)]
    compose ComputeFloat2 SampleCenter;

    [Default(0.25f, 0.0f)]
    compose ComputeFloat2 Direction;

    bool Aspect = true;

    abstract float BlurPass(int iter);

    float4 Filter(float4 tex0col)
    {
        float2 asp = lerp(1, ViewSize.x / ViewSize, Aspect);

        int iter = 16;
        float ctrl = Strength.Compute();
        float4 col = 0;

        for (float i = 0; i < 1; i += 1.0 / iter)
        {   
            col += Texture0.SampleLevel(Sampler0, ((streams.TexCoord-0.5)/asp + Direction.Compute() * float2(1,-1) * ctrl * (i - 0.5 - SampleCenter.Compute() * 0.5))*asp + 0.5, 0);
        }
        
        col = col / iter;
        return col;
    }
};