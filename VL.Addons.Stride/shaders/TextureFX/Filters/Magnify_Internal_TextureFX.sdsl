// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Filter/Magnify.tfx

// tried to access PI in Effects\Common\Utils couldn't get it to work
#define PI (3.1415926535897932384626433832795);

[Category("Filter.Distortion")]
[Summary("")]

shader Magnify_Internal_TextureFX : FilterBase
{

    [Default(0.5f, 0.5f)]
    compose ComputeFloat2 Center;

    [Default(0.25f)]
    compose ComputeFloat InnerRadius;

    [Default(2.0f)]
    compose ComputeFloat Magnification;

    [Default(0.5f)]
    compose ComputeFloat OuterRadius;


    float4 Filter(float4 tex0col)
    {
        float2 uv = streams.TexCoord;
        float magnification = Magnification.Compute();
        float innerRadius = InnerRadius.Compute();
        float outerRadius = OuterRadius.Compute();
        float2 center = Center.Compute();

        float2 center2pixel = uv - center;
        float distance = length(center2pixel);
        float4 color;
        float2 samplePoint;
    
        if (distance < outerRadius)
        {
            if (distance < innerRadius)
            {
                samplePoint = center + (center2pixel / magnification);
            }
            else 
            {
                float radiusDiff = outerRadius - innerRadius;
                
                float ratio = (distance - innerRadius)/radiusDiff;
                ratio *= PI;
               
                float adjustedRatio = cos(ratio);
                adjustedRatio += 1;
                adjustedRatio /= 2;
            
                samplePoint = ((center + center2pixel / magnification) * adjustedRatio) + (uv * (1 - adjustedRatio));
            }
        }
        else
        {
            samplePoint = uv;
        }
        
        return Texture0.Sample(Sampler0, samplePoint);	
    }
};