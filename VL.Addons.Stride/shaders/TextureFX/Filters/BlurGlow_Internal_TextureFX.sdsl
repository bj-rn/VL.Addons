// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Filter/BlurGlow.tfx

[Category("Filter.Blur")]
[Summary("")]
[WantsMips("Texture0")]
shader BlurGlow_Internal_TextureFX : FilterBase
{
    [Default(0.5f)]
    compose ComputeFloat Shape;

    [Default(2.0f)]
    compose ComputeFloat Brightness;

    [Default(0.5f)]
    compose ComputeFloat Radius;

    bool Alpha = false;

    float4 Filter(float4 tex0col)
    {
        float2 R = ViewSize;
        float2 uv = streams.TexCoord;

        float lod = log2(max(R.x, R.y));

        float4 col = 0;
        float kk = 0;

        float radius = Radius.Compute();

        for(float i = 0; i < min(lod - (1 - radius * lod), 14); i++)
        {
            float4 nc = Texture0.SampleLevel(Sampler0, uv, 1+i);
            float k = pow(2, i * Shape.Compute() - lod + 1) * saturate(radius * lod - i + 1);
            col += nc * k;
            kk += k;
        }

        col /= kk;
        col.rgb *= Brightness.Compute();
        
        if(!Alpha)
        {
            col.a = Texture0.SampleLevel(Sampler0, uv, 0).a;
        }
        
        return col;
    }
};