// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Source/Mandelbrot.tfx

[TextureSource]
[Category("Source")]
[Tags("fractal")]
[Summary("Renders a Mandelbrot fractal texture")]
shader AddonMandelbrot_Internal_TextureFX : TextureFX
{
    float4x4 Transform;
    
    [Default(0.0f, 0.0f, 0.0f, 1.0f)]
    compose ComputeColor BackgroundColor; 
    
    [Default(1.0f, 1.0f, 1.0f, 1.0f)]
    compose ComputeColor Color;
    
    
    int Iterations = 16;
    
    [Default(0.35, 0.35)]
    compose ComputeFloat2 Control;
    
    [Default(0.5)]
    compose ComputeFloat Zoom;

    [Default(1.0)]
    compose ComputeFloat Morph;

    //Keep Aspect Ratio
    bool Aspect = true;

    stage override float4 Shading()
    {
        float2 uv = streams.TexCoord;
        float2 R = ViewSize;
        
        float2 asp = lerp(1, R/R.x, Aspect);

        float4 col = 1;

        float2 xy = ((uv.xy-.5)/pow(2, Zoom.Compute()*16)) + .5;

        xy = mul(float4(xy, 0 ,1), Transform).xy;

        float2 u,z = xy;
        float ss = length(z);
        ss = 1;
        u = z;

        bool stop = false;
        float g = 0;

        for (int i=0; i<min(2000,Iterations)&&!stop ;i++)
        {
            z = ((float2((z.x*ss)*(z.x*ss) - (z.y*ss)*(z.y*ss), 2*(z.x*ss)*(z.y*ss)) + ss*lerp(u, Control.Compute(), Morph.Compute())))/ss;

            stop = length(z*ss > 2);

            g = lerp(g, g+1, smoothstep(2, 0, length(z*ss)));
        }
        
        col = lerp(BackgroundColor.Compute(), Color.Compute(), g/Iterations);
        col.a = 1;
        return col;
    }
};